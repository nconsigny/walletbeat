"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-plausible";
exports.ids = ["vendor-chunks/next-plausible"];
exports.modules = {

/***/ "(rsc)/./node_modules/next-plausible/dist/index.esm.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-plausible/dist/index.esm.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PlausibleProvider),\n/* harmony export */   usePlausible: () => (/* binding */ usePlausible),\n/* harmony export */   withPlausibleProxy: () => (/* binding */ withPlausibleProxy)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_script__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/script */ \"(rsc)/./node_modules/next/dist/api/script.js\");\n\n\n\nfunction usePlausible() {\r\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (eventName, ...rest) {\r\n        var _a, _b;\r\n        return (_b = (_a = window).plausible) === null || _b === void 0 ? void 0 : _b.call(_a, eventName, rest[0]);\r\n    }, []);\r\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nfunction getCombinations(elements) {\r\n    const combinations = [];\r\n    for (let i = 0; i < elements.length; i++) {\r\n        combinations.push([elements[i]]);\r\n        if (i < elements.length - 1) {\r\n            getCombinations(elements.slice(i + 1)).forEach((combination) => {\r\n                combinations.push([elements[i], ...combination]);\r\n            });\r\n        }\r\n    }\r\n    return combinations;\r\n}\n\nconst allModifiers = [\r\n    'exclusions',\r\n    'local',\r\n    'manual',\r\n    'outbound-links',\r\n    'file-downloads',\r\n    'tagged-events',\r\n    'pageview-props',\r\n    'revenue',\r\n    'hash',\r\n];\r\nconst getScriptPath = (options, ...modifiers) => {\r\n    var _a, _b;\r\n    let basePath = (_a = options.basePath) !== null && _a !== void 0 ? _a : '';\r\n    if (options.subdirectory) {\r\n        basePath += `/${options.subdirectory}`;\r\n    }\r\n    return `${basePath}/js/${[\r\n        (_b = options.scriptName) !== null && _b !== void 0 ? _b : 'script',\r\n        ...modifiers.sort().filter((modifier) => modifier !== null),\r\n    ].join('.')}.js`;\r\n};\r\nconst plausibleDomain = 'https://plausible.io';\r\nconst getRemoteScriptName = (selfHosted) => selfHosted ? 'plausible' : 'script';\r\nconst getDomain = (options) => { var _a; return (_a = options.customDomain) !== null && _a !== void 0 ? _a : plausibleDomain; };\r\nconst getApiEndpoint = (options) => {\r\n    var _a, _b;\r\n    return `${(_a = options.basePath) !== null && _a !== void 0 ? _a : ''}/${(_b = options.subdirectory) !== null && _b !== void 0 ? _b : 'proxy'}/api/event${options.trailingSlash ? '/' : ''}`;\r\n};\n\nfunction withPlausibleProxy(options = {}) {\r\n    return (nextConfig) => {\r\n        const nextPlausiblePublicProxyOptions = Object.assign(Object.assign({}, options), { trailingSlash: !!nextConfig.trailingSlash, basePath: nextConfig.basePath });\r\n        const nextPlausibleEnv = {\r\n            next_plausible_proxy: 'true',\r\n            next_plausible_trailingSlash: nextPlausiblePublicProxyOptions.trailingSlash ? 'true' : undefined,\r\n            next_plausible_basePath: nextPlausiblePublicProxyOptions.basePath,\r\n            next_plausible_customDomain: nextPlausiblePublicProxyOptions.customDomain,\r\n            next_plausible_scriptName: nextPlausiblePublicProxyOptions.scriptName,\r\n            next_plausible_subdirectory: nextPlausiblePublicProxyOptions.subdirectory,\r\n        };\r\n        return Object.assign(Object.assign({}, nextConfig), { env: Object.assign(Object.assign({}, nextConfig.env), Object.fromEntries(Object.entries(nextPlausibleEnv).filter(([_, value]) => value !== undefined))), rewrites: () => __awaiter(this, void 0, void 0, function* () {\r\n                var _a;\r\n                const domain = getDomain(options);\r\n                const getRemoteScript = (...modifiers) => {\r\n                    var _a;\r\n                    return ((_a = process.env.NEXT_PLAUSIBLE_TEST_DOMAIN) !== null && _a !== void 0 ? _a : domain) +\r\n                        getScriptPath({\r\n                            scriptName: getRemoteScriptName(domain !== plausibleDomain),\r\n                        }, ...modifiers);\r\n                };\r\n                const plausibleRewrites = [\r\n                    {\r\n                        source: getScriptPath(options),\r\n                        destination: getRemoteScript(),\r\n                    },\r\n                    ...getCombinations(allModifiers).map((modifiers) => ({\r\n                        source: getScriptPath(options, ...modifiers),\r\n                        destination: getRemoteScript(...modifiers),\r\n                    })),\r\n                    {\r\n                        source: getApiEndpoint(Object.assign(Object.assign({}, nextPlausiblePublicProxyOptions), { basePath: '' })),\r\n                        destination: `${domain}/api/event`,\r\n                    },\r\n                ];\r\n                if (process.env.NEXT_PLAUSIBLE_DEBUG) {\r\n                    console.log('plausibleRewrites = ', plausibleRewrites);\r\n                }\r\n                const rewrites = yield ((_a = nextConfig.rewrites) === null || _a === void 0 ? void 0 : _a.call(nextConfig));\r\n                if (!rewrites) {\r\n                    return plausibleRewrites;\r\n                }\r\n                else if (Array.isArray(rewrites)) {\r\n                    return rewrites.concat(plausibleRewrites);\r\n                }\r\n                else if (rewrites.afterFiles) {\r\n                    rewrites.afterFiles = rewrites.afterFiles.concat(plausibleRewrites);\r\n                    return rewrites;\r\n                }\r\n                else {\r\n                    rewrites.afterFiles = plausibleRewrites;\r\n                    return rewrites;\r\n                }\r\n            }) });\r\n    };\r\n}\n\nfunction PlausibleProvider(props) {\r\n    var _a;\r\n    const { enabled =  false &&\r\n        (0), } = props;\r\n    const proxyOptions = process.env.next_plausible_proxy\r\n        ? {\r\n            trailingSlash: process.env.next_plausible_trailingSlash === 'true',\r\n            basePath: process.env.next_plausible_basePath,\r\n            customDomain: process.env.next_plausible_customDomain,\r\n            scriptName: process.env.next_plausible_scriptName,\r\n            subdirectory: process.env.next_plausible_subdirectory,\r\n        }\r\n        : undefined;\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null,\r\n        enabled && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(next_script__WEBPACK_IMPORTED_MODULE_1__[\"default\"], Object.assign({ async: true, defer: true, \"data-api\": proxyOptions ? getApiEndpoint(proxyOptions) : undefined, \"data-domain\": props.domain, \"data-exclude\": props.exclude, src: (proxyOptions ? '' : getDomain(props)) +\r\n                getScriptPath(Object.assign(Object.assign({}, proxyOptions), { scriptName: proxyOptions\r\n                        ? proxyOptions.scriptName\r\n                        : getRemoteScriptName(props.selfHosted) }), props.trackLocalhost ? 'local' : null, props.manualPageviews ? 'manual' : null, props.pageviewProps ? 'pageview-props' : null, props.trackOutboundLinks ? 'outbound-links' : null, props.exclude ? 'exclusions' : null, props.revenue ? 'revenue' : null, props.trackFileDownloads ? 'file-downloads' : null, props.taggedEvents ? 'tagged-events' : null, props.hash ? 'hash' : null), integrity: props.integrity, crossOrigin: props.integrity ? 'anonymous' : undefined }, (typeof props.pageviewProps === 'object'\r\n            ? Object.fromEntries(Object.entries(props.pageviewProps).map(([k, v]) => [\r\n                `event-${k}`,\r\n                v,\r\n            ]))\r\n            : undefined), props.scriptProps))),\r\n        enabled && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(next_script__WEBPACK_IMPORTED_MODULE_1__[\"default\"], { id: \"next-plausible-init\", dangerouslySetInnerHTML: {\r\n                __html: `window.plausible = window.plausible || function() { (window.plausible.q = window.plausible.q || []).push(arguments) }`,\r\n            }, nonce: (_a = props.scriptProps) === null || _a === void 0 ? void 0 : _a.nonce })),\r\n        props.children));\r\n}\n\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-plausible/dist/index.esm.js\n");

/***/ })

};
;